treatment "in_place_fisher_yates_shuffle_2.ztt"{
	background{
		table globals{
		}
		table subjects{
		}
		table summary{
		}
		table contracts{
		}
		table session{
		}
		table logfile{
		}
		table Can{
			lifetime = PERIOD;
			execute = WITHEACH;
		}
		numsubjects = 4;
		numgroups = 1;
		numpracticeperiods = 0;
		numactualperiods = 1;
		exchangerate = 1;
		startendowment = 0;
		showupfee = 0;
		noAutoscope = FALSE;
		v2IntegerVars = TRUE;
		v2BooleanVars = TRUE;
		firstBoxesOnTop = FALSE;
		showupfeeawaytext = "You are making losses. Do you want to invest the showupfee in order to continue?";
		showupfeeawayyestext = "Yes";
		showupfeeawaynotext = "No";
		moneyawaytext = "You are  making losses. Do you want to continue?";
		moneyawayyestext = "Yes";
		moneyawaynotext = "No";
		bancruptwaittext = "Please wait until the experimenter unlocks your PC.";
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = Can;
			do{
				//                Written by: Anwar A. Ruff
			}
		}
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = globals;
			do{
				//          Set the Number of Subjects
				
				numSubjects = 4;
			}
		}
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = globals;
			do{
				//            Setup Subject IDs Array
				//------------------------------------------------------------------------------------------------------------
				// Hey! Why is this in the globals table scope?
				// If it wasn't each subject would have their own shuffled list of IDs.
				//-----------------------------------------------------------------------------------------------------------
				
				array subjectIDs[numSubjects];
				
				id = 1;
				while (id <= numSubjects) {
				    subjectIDs[id] = id;
				    id = id + 1;
				}
				
				
				
			}
		}
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = globals;
			do{
				//           Shuffle the Array
				
				pointID = 0;
				randID = 0;
				id = numSubjects;
				while (id > 1) {
				    randID = rounddown(id*random(), 1) + 1;
				    pointID = subjectIDs[id];
				    subjectIDs[id] = subjectIDs[randID];
				    subjectIDs[randID] = pointID;
				
				    id = id - 1;
				}
				
				
				
				
				
			}
		}
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = subjects;
			do{
				// Assign New Subject IDs to Subjects
				
				Subject = subjectIDs[Subject];
			}
		}
		program{
			table = Can;
			do{
				// --------------------------------------------------
			}
		}
		program{
			table = subjects;
			do{
				// Check for Errors
				
				error = 0;
				
				n = subjects.count(Subject > 0);
				
				if (numSubjects != n) {
				    error = 1;
				}
			}
		}
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			headerbox "Header"{
				hasframe = TRUE;
				height = 10%;
				top = 0p;
				cuttop = TRUE;
				showPeriods = TRUE;
				showNumPeriods = TRUE;
				periodtext = "Period";
				periodoftext = "of";
				practiceperiodprefix = "Trial ";
				showtime = TRUE;
				timestr = "Remaining time [sec]:";
				pleasedecidetext = "Please reach a decision.";
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Text"{
				hasframe = TRUE;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Please wait until the experiment continues.";
				}
			}
		}
	}
	stage "Stage"{
		startwaitforall = TRUE;
		singleentry = FALSE;
		singleentrycontinuation = FALSE;
		timeouttype = ifnoinput;
		timeout = 30;
		screen action{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
			standardbox "Error Display"{
				hasframe = TRUE;
				height = 75%;
				top = 0p;
				displaycondition = error == 1;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "Error: The numSubjects variable must be set to the current number subjects (z-leaves). ";
				}
				item{
					label = "Please Click continue, update the numSubjects variable, and run the sample code again.";
				}
			}
			standardbox "Standard"{
				hasframe = TRUE;
				height = 75%;
				top = 0p;
				displaycondition = error == 0;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				item{
					label = "<>My id is <Subject|1.0>";
				}
			}
			standardbox "Standard"{
				hasframe = TRUE;
				height = 25%;
				bottom = 0p;
				buttonposition = BOTTOMRIGHT;
				buttonsequence = HORIZONTAL;
				button "OK"{
					clearinputafterok = FALSE;
					norecordmadeorselected = FALSE;
					terminatestage = FALSE;
					donotterminatestage = FALSE;
					specialbuttoncolor = FALSE;
					buttoncolor = 0;
				}
			}
		}
		screen wait{
			usesbg = TRUE;
			withalertscreen = FALSE;
			noalertscreen = FALSE;
		}
	}
	roles{
		role "S 1"{
		}
		role "S 2"{
		}
		role "S 3"{
		}
		role "S 4"{
		}
	}
	period "1"{
		subject 1{
			group = 1;
		}
		subject 2{
			group = 1;
		}
		subject 3{
			group = 1;
		}
		subject 4{
			group = 1;
		}
	}
}